---
- name: Pull images used by kubeadm
  ansible.builtin.shell: |
    kubeadm config images pull --kubernetes-version=v{{ kube_version }}
  args:
    executable: /bin/bash
  register: pull_images
  changed_when: pull_images.rc == 0

- name: Generate new certificate key on first control plane node
  ansible.builtin.shell: |
    kubeadm init phase upload-certs --upload-certs
  args:
    executable: /bin/bash
  register: certificate_key_output
  changed_when: certificate_key_output.rc == 0
  delegate_to: "{{ groups['control_planes'][0] }}"
  when: inventory_hostname != groups['control_planes'][0]

- name: Save the certificate key
  ansible.builtin.set_fact:
    certificate_key: "{{ certificate_key_output.stdout_lines[-1] }}"
  when:
    - inventory_hostname != groups['control_planes'][0]
    - certificate_key_output is defined

- name: Print kubeadm join command
  ansible.builtin.shell: |
    set -o pipefail
    kubeadm token create  --certificate-key {{ certificate_key }} --print-join-command
  args:
    executable: /bin/bash
  register: print_join_command
  changed_when: print_join_command.rc == 0
  delegate_to: "{{ groups['control_planes'][0] }}"
  when: inventory_hostname != groups['control_planes'][0]

- name: Save kubeadm join command
  ansible.builtin.set_fact:
    kubeadm_join_command: "{{ print_join_command.stdout_lines[-1] }}"
  when: inventory_hostname != groups['control_planes'][0]

- name: Join control plane node
  ansible.builtin.shell: |
    set -o pipefail
    {{ kubeadm_join_command }} | tee "/home/{{ ansible_user }}/kubeadm-join.log"
  args:
    executable: /bin/bash
  register: join_cluster
  changed_when: join_cluster.rc == 0
  failed_when: join_cluster.rc != 0
  when:
    - inventory_hostname != groups['control_planes'][0]
    - kubeadm_join_command is defined
  notify: Restore kube-vip static pod manifests
