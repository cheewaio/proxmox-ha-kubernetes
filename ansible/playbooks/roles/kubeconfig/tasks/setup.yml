---
- name: Check if the first control plane node is initialized
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: control_plane_initialized
  changed_when: control_plane_initialized is defined
  when: inventory_hostname == groups['control_planes'][0]

- name: Ensure .kube directory exists in user home directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: "0700"
  become: false
  when:
    - inventory_hostname == groups['control_planes'][0]
    - control_plane_initialized.stat.exists

- name: Copy Kubernetes admin.conf to user home directory
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
  when:
    - inventory_hostname == groups['control_planes'][0]
    - control_plane_initialized.stat.exists

- name: Ensure .kube directory exists on ansible controller host
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.kube"
    state: directory
    mode: '0700'
  become: false
  delegate_to: localhost
  when:
    - inventory_hostname == groups['control_planes'][0]
    - control_plane_initialized.stat.exists

- name: Copy Kubernetes admin config file to ansible controller host
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ lookup('env', 'HOME') }}/admin.conf"
    flat: true
  when:
    - inventory_hostname == groups['control_planes'][0]
    - control_plane_initialized.stat.exists

- name: Merge admin.conf with kubeconfig on ansible controller host
  ansible.builtin.shell: |
    set -o pipefail
    KUBECONFIG=$HOME/admin.conf:$HOME/.kube/config kubectl config view --flatten --merge > $HOME/.kube/config
  args:
    executable: /bin/bash
  become: false
  delegate_to: localhost
  register: merge_kubeconfig_result
  changed_when: true
  when:
    - inventory_hostname == groups['control_planes'][0]
    - control_plane_initialized.stat.exists
