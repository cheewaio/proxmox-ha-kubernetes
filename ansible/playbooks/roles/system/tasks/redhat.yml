---
- name: Set SELinux to permissive mode
  ansible.builtin.selinux:
    state: permissive
    policy: targeted

- name: Ensure SELinux is set to permissive mode in config file
  ansible.builtin.replace:
    path: /etc/selinux/config
    regexp: "^SELINUX=enforcing$"
    replace: "SELINUX=permissive"

- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_cache: true
    update_only: true

- name: Install required Python packages for Kubernetes modules
  ansible.builtin.dnf:
    name:
      - python3-pip
      - python3-pyyaml
      - python3-jsonpatch
    state: present
  when: inventory_hostname == groups['control_planes'][0]

- name: Ensure kubernetes Python package is installed
  ansible.builtin.pip:
    name: kubernetes
    executable: pip3
  become: true
  when: inventory_hostname == groups['control_planes'][0]

- name: Add Kubernetes repository
  ansible.builtin.yum_repository:
    name: "kubernetes"
    description: "Kubernetes"
    file: "kubernetes"
    baseurl: "https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/rpm/"
    gpgcheck: true
    gpgkey: "https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/rpm/repodata/repomd.xml.key"
    enabled: true
    repo_gpgcheck: true
    exclude: "kubeadm kubelet kubectl"

- name: Install DNF versionlock plugin
  ansible.builtin.dnf:
    name: python3-dnf-plugin-versionlock
    state: present

- name: Install kubeadm, kubelet and kubectl
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
    disable_excludes: kubernetes
  with_items:
    - kubeadm-{{ kube_version }}*
    - kubelet-{{ kube_version }}*
    - kubectl-{{ kube_version }}*

- name: Hold kubeadm, kubelet and kubectl at minor versions
  ansible.builtin.command:
    cmd: "   --raw {{ item }}"
    creates: "/etc/dnf/plugins/versionlock.list"
  with_items:
    - kubeadm-{{ kube_version }}*
    - kubelet-{{ kube_version }}*
    - kubectl-{{ kube_version }}*
